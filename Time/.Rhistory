factors_matrixsummary %>%
ggplot(aes(Primary_Venn_Class, total, fill = Primary_Venn_Class)) + geom_col()
# Determine the ratios between the factors that can be used for simulation
factors_matrixsummary %>%
gather(key, value, -Primary_Venn_Class) %>%
filter(key != "total", key != "BK") %>%
mutate(total = sum(value),
Ratio = value/ total) %>% View()
# How much of each primary class in percent of total class values?
factors_matrixsummary %>%
gather(key, value, -Primary_Venn_Class) %>%
filter(key == "total") %>%
mutate(total = sum(value),
percent = (value / total) * 100)
Area1 <- rep(paste0("BKCS", 1:(factors_matrixsummary[[6]][[3]] +
factors_matrixsummary[[3]][[3]] +
factors_matrixsummary[[6]][[1]] +
factors_matrixsummary[[4]][[1]])),
(factors_matrixsummary[[6]][[3]] +
factors_matrixsummary[[3]][[3]] +
factors_matrixsummary[[6]][[1]] +
factors_matrixsummary[[4]][[1]])) # Area 1
Area2 <- rep(paste0("BKMT", 1:(factors_matrixsummary[[3]][[2]]  +
factors_matrixsummary[[7]][[2]] +
factors_matrixsummary[[2]][[1]] +
factors_matrixsummary[[7]][[1]])),
(factors_matrixsummary[[3]][[2]]  +
factors_matrixsummary[[7]][[2]] +
factors_matrixsummary[[2]][[1]] +
factors_matrixsummary[[7]][[1]])) # Area 2
Area3 <- rep(paste0("CSMT", 1:(factors_matrixsummary[[4]][[2]] +
factors_matrixsummary[[5]][[2]] +
factors_matrixsummary[[2]][[3]] +
factors_matrixsummary[[5]][[3]])),
(factors_matrixsummary[[4]][[2]] +
factors_matrixsummary[[5]][[2]] +
factors_matrixsummary[[2]][[3]] +
factors_matrixsummary[[5]][[3]])) # Area 3
Area4 <- rep(paste0("DS", 1:(factors_matrixsummary[[5]][[1]] +
factors_matrixsummary[[6]][[2]] +
factors_matrixsummary[[7]][[3]] +
factors_matrixsummary[[8]][[1]] +
factors_matrixsummary[[8]][[2]] +
factors_matrixsummary[[8]][[3]])),
(factors_matrixsummary[[5]][[1]] +
factors_matrixsummary[[6]][[2]] +
factors_matrixsummary[[7]][[3]] +
factors_matrixsummary[[8]][[1]] +
factors_matrixsummary[[8]][[2]] +
factors_matrixsummary[[8]][[3]])) # Area 4
Area5 <- rep(paste0("BK", 1:factors_matrixsummary[[3]][[1]]), factors_matrixsummary[[3]][[1]]) # Area 5 (BK only)
Area6 <- rep(paste0("CS", 1:factors_matrixsummary[[2]][[2]]), factors_matrixsummary[[2]][[2]]) # Area 6 (CS only)
Area7 <- rep(paste0("MT", 1:factors_matrixsummary[[4]][[3]]), factors_matrixsummary[[4]][[3]]) # Area 7 (MT only)
w <- list(
BK = c(Area1, Area2, Area4, Area5),
CS = c(Area1, Area3, Area4, Area6),
MT = c(Area2, Area3, Area4, Area7)
)
library(ggVennDiagram)
library(wesanderson)
library(ggplot2)
ggVennDiagram(w,
category.names = c("Domain", "Science", "Math"),
show_intersect = F,
set_color = "black",
set_size = 4,
label = "both",
label_alpha = 0.00,
label_geom = "label",
label_color = "black",
label_size = 4,
label_percent_digit = 2,
label_txtWidth = 30,
edge_lty = "solid",
edge_size = 1) +
guides(fill = guide_legend(title = "Title", )) +
scale_color_manual(values = c("white", "white", "white")) +
scale_fill_gradient(low = "#c2fffc", high = "#00c4bb") +
labs(title = "Project Class Diagram",
subtitle = "What project areas do I spend time on?",
caption = Sys.Date()) +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5))
View(df)
glink <- paste0("https://docs.google.com/spreadsheets/",
"d/e/2PACX-1vQrgIzP3_8Fbn7I7kiwKuH8aYPzIRYDXqMj",
"AIJo9ejpN902Yzv5Gqetbq3QX5DqjOddVT3caxxftuii/pub?",
"gid=343744476&single=true&output=csv")
times <- read.delim(glink, header = T, sep = ",")
times$Date <- mdy(times$Date)
times$Start <- hms::as_hms(lubridate::parse_date_time(times$Start, "%I:%M %p"))
times$End <- hms::as_hms(lubridate::parse_date_time(times$End, "%I:%M %p"))
times$project_duration <- (times$End - times$Start)
work_duration_day <- 8 * 60 * 60 # h * m * s = s
work_duration_week <- work_duration_day * 5
work_week_startdate <- seq(
as_date(min(times$Date)), as_date(max(times$Date)), by = "7 days"
)
df_all <- data.frame(Date = seq(work_week_startdate[[1]],
work_week_startdate[[1]] + 4, by = "day"))
for (i in 2:length(work_week_startdate)){
df <- data.frame(Date = seq(work_week_startdate[[i]],
work_week_startdate[[i]] + 4, by = "day"))
df_all <- rbind(df_all, df)
}
df_all <- df_all %>%
mutate(time_day = as.integer(work_duration_day))
setDT(times)
setDT(df_all)
df <- times[df_all, on = "Date"] # Merge to DF
df$project_duration[which(is.na(df$project_duration))] <- 0
View(df)
# Packages
require(pacman)
pacman::p_install("dplyr", "lubridate", "DT")
pacman::p_install(c("dplyr", "lubridate", "DT"))
df %>%
group_by(Job_Category) %>%
summarise(sum(project_duration))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(sum(project_duration))
pacman::p_install(c("dplyr", "lubridate", "data.table", "ggplot2"))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(Date, t)) + geom_point()
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area, Date) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(Date, t)) + geom_point()
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(Date = Date, t = sum(project_duration)) %>%
ggplot(aes(Date, t)) + geom_point()
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(t)) + geom_point()
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(t)) + geom_bar()
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(t)) + geom_bar(stat = "identity")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(t)) + geom_bar(stat = "identity", y = t)
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(t)) + geom_bar(stat = "identity", aes(y = t))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(DataScience_Anaconda_Survey_TimeSpentOn_Area)) + geom_bar(stat = "identity", aes(y = t))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t), col = DataScience_Anaconda_Survey_TimeSpentOn_Area)
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, fill = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, fill = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t, fill = "white"))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t), fill = "white")) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t)), fill = "white") +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area, fill = "white"))
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") %>% theme(legend.position = element_blank())
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") %>% theme(legend.position = element_blank())
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") %>% theme(legend.position = "none")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") %>% theme(legend.position = "none")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") + theme(legend.position = "none")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") + theme(legend.position = "none")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t/3600, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") + theme(legend.position = "none")
df %>%
group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
summarise(t = sum(project_duration)) %>%
na.exclude() %>%
ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
fill = "white") + theme(legend.position = "none")
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(sum(project_duration))
class(df$Primary_Venn_Class)
toupper(df$Primary_Venn_Class)
df$Primary_Venn_Class[70,]
df$Primary_Venn_Class[,70]
df$Primary_Venn_Class[[70]]]
df$Primary_Venn_Class[[70]]]
df$Primary_Venn_Class[[70]]
df$Primary_Venn_Class[70,]
df$Primary_Venn_Class[,70]
df$Primary_Venn_Class[1,]
df[1,]
df[70,]
df$Primary_Venn_Class <- toupper(df$Primary_Venn_Class)
df %>%
group_by(Job_Category) %>%
summarise(sum(project_duration))
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(sum(project_duration))
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(sum(project_duration/360))
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(t = sum(project_duration),
hours = as.numeric(t)/360)
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(t = sum(project_duration),
hours = numeric(t)/360)
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(t = sum(project_duration),
hours = numeric(t)/360)
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(t = sum(project_duration),
hours = as.numeric(t)/360)
# df %>%
#   group_by(DataScience_Anaconda_Survey_TimeSpentOn_Area) %>%
#   summarise(t = sum(project_duration)) %>%
#   na.exclude() %>%
#   ggplot(aes(reorder(DataScience_Anaconda_Survey_TimeSpentOn_Area, t))) +
#   geom_bar(stat = "identity", aes(y = t/360, col = DataScience_Anaconda_Survey_TimeSpentOn_Area),
#            fill = "white") + theme(legend.position = "none")\
df %>%
group_by(Primary_Venn_Class) %>%
summarise(t = sum(project_duration),
hours = as.numeric(t)/360)
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(day = floor_date(Date, "day")) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -day) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(day = floor_date(Date, "day")) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -day) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(Day = floor_date(Date, "day")) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -day) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(day = floor_date(Date, "day")) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -day) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(project_duration) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -day) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(Project) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -Project) %>%
ggplot(aes(day, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(Project) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -Project) %>%
ggplot(aes(Project, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# How much time have I had leftover each day?
# How would this line chart look with 0 as the minimum time (ignore OT)?
df %>%
group_by(Project) %>%
summarise(prj_time = sum(as.numeric(project_duration)),
# non_prj_time = as.numeric(work_duration_day - prj_time),
# tot_time = (prj_time + non_prj_time), # = work_duration_day
# project_time = work_duration_day - non_prj_time
) %>% # prj_time and project_time should overlay exactly on plot
filter(prj_time >= 0) %>%
gather(key, value, -Project) %>%
ggplot(aes(Project, (value/3600))) +
geom_col(position = "stack", fill = "light blue", col = "black", alpha = 0.75) +
geom_hline(yintercept = df.stats$med, lty = "dashed") + coord_flip() +
labs(x = "Day", y = "Hours", title = "Title", subtitle = "subtitle") +
theme_classic() + theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
shiny::runApp('C:/Users/Zachary.Palmore/GitHub/misc/Mortality')
